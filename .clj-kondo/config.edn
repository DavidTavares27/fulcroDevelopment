{:config-paths ["nubank/state-flow"
                "marick/midje"]
 :hooks {:analyze-call {com.fulcrologic.fulcro.mutations/defmutation clj-kondo.fulcro/defmutation
                        com.fulcrologic.guardrails.core/>defn clj-kondo.fulcro/>defn
                        integration.crocodilo.aux/init-flow nubank.state-flow/defflow
                        integration.crocodilo.aux/init-flow-with-kafka nubank.state-flow/defflow
                        state-flow.cljtest/defflow    nubank.state-flow/defflow
                        state-flow.core/flow          nubank.state-flow/flow
                        state-flow.api/flow           nubank.state-flow/flow}}
 :linters {:clj-kondo.fulcro.defmutation/handler-arity {:level :error}
           :clj-kondo.fulcro.>defn/signature-mismatch {:level :error}}
 :lint-as {com.fulcrologic.fulcro.components/defsc                  clojure.core/defn
           com.fulcrologic.fulcro.routing.dynamic-routing/defrouter clojure.core/defn
           com.fulcrologic.fulcro.ui-state-machines/defstatemachine clojure.core/def
           com.fulcrologic.guardrails.core/>def                     clojure.core/def
           com.fulcrologic.guardrails.core/>defn                    clojure.core/defn
           com.fulcrologic.rad.attributes/defattr                   clojure.core/def
           com.fulcrologic.rad.report/defsc-report                  clojure.core/defn
           com.fulcrologic.rad.form/defsc-form                      clojure.core/defn
           com.fulcrologic.rad.authorization/defauthenticator       clojure.core/def
           com.wsscode.pathom.connect/defmutation                   clojure.core/defn
           com.wsscode.pathom.connect/defresolver                   clojure.core/defn
           clojure.test.check.properties/for-all                    clojure.core/let
           clojure.test.check.clojure-test/defspec                  clojure.core/def
           state-flow.api/for                                       clojure.core/for}}
